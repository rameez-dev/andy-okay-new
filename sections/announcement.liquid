{%- if section.settings.enable_bar -%}
  {%- unless section.settings.home_page_only and template != 'index' -%}
    <section id="section-{{ section.id }}" data-section-id="{{ section.id }}" data-section-type="announcement-bar">
      <div class="AnnouncementBar">
        <div class="AnnouncementBar__Wrapper" >
          <p class="AnnouncementBar__Content Heading" id="announcement-cont" style="height: 20px;overflow-y: hidden;">
            {% for block in section.blocks %}
              {%- if forloop.index == 1 -%}
                <span name="announcement-block-{{forloop.index}}">
                  {% if block.settings.icon != blank %}
                    <img class="announcement_icon" src="{{ block.settings.icon | image_url: height: 30 }}">
                  {% endif %}
                  {%- if block.settings.link -%}
                    <a href="{{ block.settings.link }}">{{ block.settings.content }}</a><br>
                  {%- else -%}
                    <span>{{ block.settings.content }}</span><br>
                  {%- endif -%}
                </span>  
              {%- else -%}
                <span style="display: none;" name="announcement-block-{{forloop.index}}">
                  {% if block.settings.icon != blank %}
                    <img class="announcement_icon" src="{{ block.settings.icon | image_url: height: 30 }}">
                  {% endif %}
                  {%- if block.settings.link -%}
                    <a href="{{ block.settings.link }}">{{ block.settings.content }}</a><br>
                  {%- else -%}
                    <span>{{ block.settings.content }}</span><br>
                  {%- endif -%}
                </span>
              {%- endif -%}
            {% endfor %}
          </p>
        </div>
      </div>
    </section>


    <style>
      .come_infromtop{
        animation-name: infromtop;
        animation-duration: 1s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
      }
      @keyframes infromtop {
        0% { transform: translateY(-30px);}
        100% { transform: translateY(0px);}
      }
      .come_infrombottom{
        animation-name: infrombottom;
        animation-duration: 1s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
      }
      @keyframes infrombottom {
        0% { transform: translateY(30px);}
        100% { transform: translateY( 0px);}
      }
      .out_tobottom{
        animation-name: outtobottom;
        animation-duration: 1s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
      }
      @keyframes outtobottom {
        0% { transform: translateY(0px);}
        100% { transform: translateY( 30px);}
      }
      .out_totop{
        animation-name: outtotop;
        animation-duration: 1s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
      }
      @keyframes outtotop {
        0% { transform: translateY(0px);}
        100% { transform: translateY( -30px);}
      }

      #section-{{ section.id }} {
        background: {{ section.settings.background }};
        color: {{ section.settings.text_color }};
      }
    </style>

    <script>
      document.documentElement.style.setProperty('--announcement-bar-height', document.getElementById('shopify-section-announcement').offsetHeight + 'px');
    </script>
    <script>
      $(function() {
        function timeout(ms) {
          return new Promise(resolve => setTimeout(resolve, ms));
        }

        async function animation(){
          let x = $("#announcement-cont").children("span");
          for (var i=0; i<x.length;i++ ){  
            x[i].style.display = "inline-block";
            x[i].classList.add("come_infromtop");
            await timeout(1000);
            x[i].classList.remove("come_infromtop"); 
            await timeout(3000);
            x[i].classList.add("out_tobottom");
            await timeout(1000);
            x[i].classList.remove("out_tobottom");
            x[i].style.display = "none";
          }
          for (var i=x.length-2; i>=0; --i ){  
            x[i].style.display = "inline-block";
            x[i].classList.add("come_infrombottom");
            await timeout(1000);
            x[i].classList.remove("come_infrombottom"); 
            await timeout(3000);
            x[i].classList.add("out_totop");
            await timeout(1000);
            x[i].classList.remove("out_totop");
            x[i].style.display = "none";
          }
        
        animation();
        }

        animation();
      });
    </script>
    
  {%- endunless -%}
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_bar",
      "label": "Enable bar",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "home_page_only",
      "label": "Home page only",
      "default": false
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#ffffff"
    }
  ],
  "blocks": [
    {
    "name": "Announcement",
    "type": "announcement",
    "settings":[ 
        {
          "type": "text",
          "id": "content",
          "label": "Text",
          "default": "Announce something here"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Icon"
        }
      ]   
    }
  ]
}
{% endschema %}